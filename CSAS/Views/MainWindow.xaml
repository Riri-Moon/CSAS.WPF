<Window x:Class="CSAS.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CSAS"
        mc:Ignorable="d"
         xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes" xmlns:viewmodels="clr-namespace:CSAS.ViewModels" xmlns:converters="clr-namespace:CSAS.Converters"
        Title="{Binding CurrentVersion}" Width="1440" Height="810" ResizeMode="CanMinimize"
        WindowStartupLocation="CenterScreen"
        WindowStyle="ThreeDBorderWindow">
    <Window.Resources>
        <converters:MultiValueConverter x:Key="MultiValueConverter"/>
    </Window.Resources>
    <Grid>
        
        <materialDesign:DialogHost
        Identifier="RootDialog"
        DialogTheme="Inherit">

            <materialDesign:DrawerHost
            IsLeftDrawerOpen="{Binding ElementName=MenuToggleButton, Path=IsChecked}">
                <materialDesign:DrawerHost.LeftDrawerContent>
                    <DockPanel MinWidth="220">
                        <ToggleButton 
                        Style="{StaticResource MaterialDesignHamburgerToggleButton}" 
                        DockPanel.Dock="Top"
                        HorizontalAlignment="Right" 
                        Margin="16"
                        IsChecked="{Binding ElementName=MenuToggleButton, Path=IsChecked, Mode=TwoWay}"/>

                        <TextBox 
                        x:Name="ViewItemsSearchBox"
                        Text="{Binding SearchKeyword, UpdateSourceTrigger=PropertyChanged}"
                        DockPanel.Dock="Top"
                        Margin="16, 4"
                        Width="200"
                        materialDesign:HintAssist.Hint="Search"
                        materialDesign:HintAssist.IsFloating="True"
                        materialDesign:TextFieldAssist.HasClearButton="True"
                        materialDesign:TextFieldAssist.HasOutlinedTextField="True"
                        materialDesign:TextFieldAssist.DecorationVisibility="Collapsed"
                        materialDesign:TextFieldAssist.TextFieldCornerRadius="4"/>

                        <ListBox 
                        x:Name="ViewItemsListBox" 
                        Margin="0 16 0 16"
                        SelectedIndex="{Binding SelectedIndex}"
                        SelectedItem="{Binding SelectedItem, UpdateSourceTrigger=PropertyChanged}"
                        ItemsSource="{Binding ViewItems}"
                        AutomationProperties.Name="ViewPagesListBox"
                        Style="{StaticResource MaterialDesignNavigationPrimaryListBox}">
                            <ListBox.Resources>
                                <Style TargetType="ScrollBar" BasedOn="{StaticResource MaterialDesignScrollBarMinimal}"/>
                            </ListBox.Resources>
                            <ListBox.ItemTemplate>
                                <DataTemplate DataType="Models:ViewItem">
                                    <TextBlock Text="{Binding Name}" Margin="24 4 0 4" AutomationProperties.AutomationId="DemoItemPage"/>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </DockPanel>
                </materialDesign:DrawerHost.LeftDrawerContent>

                <DockPanel>
                    <materialDesign:ColorZone
                    Padding="16"
                    materialDesign:ShadowAssist.ShadowDepth="Depth2"
                    Mode="PrimaryMid"
                    DockPanel.Dock="Top">
                        <DockPanel>
                            <StackPanel Orientation="Horizontal">
                                <ToggleButton
                                x:Name="MenuToggleButton"
                                Style="{StaticResource MaterialDesignHamburgerToggleButton}"
                                IsChecked="False"
                                AutomationProperties.Name="HamburgerToggleButton"/>

                                <Button
                                Margin="24,0,0,0"
                                ToolTip="Previous Item"
                                Command="{Binding MovePrevCommand}"
                                Content="{materialDesign:PackIcon Kind=ArrowLeft, Size=24}"
                                Style="{DynamicResource MaterialDesignToolButton}"
                                Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"
                                materialDesign:RippleAssist.Feedback="{Binding RelativeSource={RelativeSource Self}, Path=Foreground, Converter={StaticResource BrushRoundConverter}}"/>

                                <Button 
                                Margin="16,0,0,0"
                                ToolTip="Next Item"
                                Command="{Binding MoveNextCommand}"
                                Content="{materialDesign:PackIcon Kind=ArrowRight, Size=24}"
                                Style="{DynamicResource MaterialDesignToolButton}"
                                Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"
                                materialDesign:RippleAssist.Feedback="{Binding RelativeSource={RelativeSource Self}, Path=Foreground, Converter={StaticResource BrushRoundConverter}}"/>

                                <Button
                                Margin="16,0,0,0"
                                ToolTip="Home"
                                Command="{Binding HomeCommand}"
                                Content="{materialDesign:PackIcon Kind=Home, Size=24}"
                                Style="{DynamicResource MaterialDesignToolButton}"
                                Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"
                                materialDesign:RippleAssist.Feedback="{Binding RelativeSource={RelativeSource Self}, Path=Foreground, Converter={StaticResource BrushRoundConverter}}"/>

                                <Button
                                       Margin="16,0,0,0"
                                ToolTip=""
                                Command="{Binding ImportCommand}" 
                                Content="ZMENIŤ SKUPINU"
                                FontSize="18"
                                Style="{DynamicResource MaterialDesignToolButton}"
                                Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"
                                materialDesign:RippleAssist.Feedback="{Binding RelativeSource={RelativeSource Self}, Path=Foreground, Converter={StaticResource BrushRoundConverter}}">
                                    <Button.CommandParameter>
                                        <MultiBinding Converter="{StaticResource MultiValueConverter}">
                                            <Binding RelativeSource="{RelativeSource AncestorType={x:Type Window}}"/>
                                        </MultiBinding>
                                    </Button.CommandParameter>
                                </Button>
                            </StackPanel>

                            <materialDesign:PopupBox
                            DockPanel.Dock="Right"
                            PlacementMode="BottomAndAlignRightEdges"
                            StaysOpen="False">

                                <StackPanel>
                                    <Grid Margin="10">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition />
                                            <RowDefinition />
                                        </Grid.RowDefinitions>
                                        <TextBlock
                                        Text="Light"
                                        Margin="0 0 10 0"/>
                                        <ToggleButton
                                        IsChecked="{Binding IsDarkTheme,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                        Grid.Column="1"/>
                                        <TextBlock
                                        Text="Dark"
                                        Margin="10 0 0 0"
                                        Grid.Column="2"/>
                                        <TextBlock
                                        Text="Enabled"
                                        Margin="0 10 10 0"
                                        Grid.Row="1"/>
                                        <ToggleButton
                                        x:Name="ControlsEnabledToggleButton"
                                        Margin="0 10 0 0"
                                        IsChecked="{Binding ControlsEnabled}"
                                        Grid.Row="1"
                                        Grid.Column="1"/>
                                    </Grid>

                                    <Separator/>

                                    <Button Content="Export údajov" Command="{Binding OpenExportCommand}"/>
                                 
                                    <Separator/>

                                        <Button
                                    Content="Ukončiť" Command="{Binding ExitCommand}"/>
                                </StackPanel>
                            </materialDesign:PopupBox>

                            <TextBlock
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Margin="-50,0,0,0"
                            FontSize="22"
                            AutomationProperties.Name="None"
                            Text="{Binding SelectedItem.Name}"/>
                        </DockPanel>
                    </materialDesign:ColorZone>

                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <ScrollViewer 
                        x:Name="MainScrollViewer"
                        Grid.Row="1"
                        materialDesign:ScrollViewerAssist.IsAutoHideEnabled="True"
                            Style="{StaticResource MaterialDesignScrollViewer}"
                        HorizontalScrollBarVisibility="{Binding SelectedItem.HorizontalScrollBarVisibilityRequirement, FallbackValue=Disabled}"
                        VerticalScrollBarVisibility="{Binding SelectedItem.VerticalScrollBarVisibilityRequirement, FallbackValue=Disabled}" >
                            <ContentControl
                            DataContext="{Binding SelectedItem}"
                            Margin="{Binding MarginRequirement, FallbackValue=16}"
                            Content="{Binding Content, UpdateSourceTrigger=PropertyChanged, FallbackValue={x:Null}}"/>
                        </ScrollViewer>
                    </Grid>
                </DockPanel>
            </materialDesign:DrawerHost>
        </materialDesign:DialogHost>
        
    </Grid>
</Window>
